{
  "swagger": "2.0",
  "info": {
    "title": "multi-oauth-2.0",
    "description": "Example with security options and a token and auth URL.",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "host": "hostname",
  "basePath": "/api",
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "tasks",
          "fetching"
        ],
        "summary": "List all tasks",
        "description": "Fetches all tasks from the database",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "All is good",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tasks",
          "creating"
        ],
        "summary": "Create new task",
        "description": "Stores new task in the database",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Task to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "All is good",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      }
    },
    "/{id}": {
      "get": {
        "tags": [
          "tasks",
          "fetching"
        ],
        "summary": "Fetch task",
        "description": "Fetches task by given identifier",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "All is good",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "404": {
            "description": "No task with provided identifier found"
          }
        }
      },
      "put": {
        "tags": [
          "tasks",
          "updating"
        ],
        "summary": "Update task",
        "description": "Updates task by given identifier",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Task with updates",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All is good",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tasks",
          "destruction"
        ],
        "summary": "Delete task",
        "description": "Deletes task by given identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task identifier to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Task deleted"
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "description": "Get all tasks.",
        "responses": {
          "200": {
            "description": "Everything is OK."
          }
        }
      }
    }
  },
  "definitions": {
    "Task": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "title": "Task ID",
          "description": "Unique task identifier",
          "type": "integer"
        },
        "task": {
          "title": "The task",
          "description": "Task line",
          "type": "string"
        },
        "completed": {
          "title": "Task completition status",
          "description": "0 - ongoing, 1 - completed",
          "maximum": 1,
          "minimum": 0,
          "type": "integer"
        }
      }
    }
  },
  "securityDefinitions": {
    "oauthAppTokenUrl": {
      "type": "oauth2",
      "description": "Testing with OAuth 2.0 with a token URL.",
      "flow": "application",
      "tokenUrl": "https://utm.defined.host/oauth/token",
      "scopes": {
        "utm.nasa.gov_read.fimsadmin": "Subject can read data internal to FIMS.",
        "utm.nasa.gov_read.constraint": "Subject can read UTM constraint data"
      }
    },
    "oauthImplicitAuthUrl": {
      "type": "oauth2",
      "description": "OAuth implicit with an authorization URL.",
      "flow": "implicit",
      "authorizationUrl": "https://www.auth-url-goes-here.com/",
      "scopes": {
        "scope-1": "a scope"
      }
    },
    "basicSecurity": {
      "type": "basic",
      "description": "BASIC security type"
    },
    "apiKey": {
      "type": "apiKey",
      "description": "Testing with API Key as security type.",
      "name": "api_key",
      "in": "header"
    }
  },
  "security": [
    {
      "oauthAppTokenUrl": [
        "utm.nasa.gov_read.fimsadmin",
        "utm.nasa.gov_read.constraint"
      ],
      "basicSecurity": [],
      "apiKey": [],
      "oauthImplicitAuthUrl": [
        "scope-1"
      ]
    }
  ]
}